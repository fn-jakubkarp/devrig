# roles/zsh/tasks/main.yml

- name: "ZSH | Ensure ZSH is installed"
  become: true
  ansible.builtin.package:
    name: zsh
    state: present

- name: "ZSH | Check for distribution-specific task file"
  ansible.builtin.stat:
    path: "{{ role_path }}/tasks/{{ ansible_distribution }}.yml"
  register: distribution_config

- name: "ZSH | Run distribution-specific tasks"
  ansible.builtin.include_tasks: "{{ ansible_distribution }}.yml"
  when: distribution_config.stat.exists

- name: "ZSH | Ensure configuration directories exist"
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ config_dir }}"
    - "{{ config_dir }}/functions"
    - "{{ config_dir }}/aliases"

- name: "ZSH | Copy alias files"
  ansible.builtin.copy:
    src: "aliases/{{ item }}"
    dest: "{{ config_dir }}/aliases/{{ item }}"
    mode: '0644'
  loop:
    - git_aliases.zsh
    - aliases.zsh

- name: "ZSH | Copy function files"
  ansible.builtin.copy:
    src: "functions/{{ item }}"
    dest: "{{ config_dir }}/functions/{{ item }}"
    mode: '0644'
  loop:
    - git_functions.zsh

- name: "ZSH | Copy OS-specific functions"
  ansible.builtin.copy:
    src: "commands/{{ ansible_distribution }}/os_functions.zsh"
    dest: "{{ config_dir }}/functions/os_functions.zsh"
    mode: '0644'
  when: ansible_distribution in ['Ubuntu', 'MacOSX']

- name: "ZSH | Copy ZSH config files"
  ansible.builtin.copy:
    src: "config/{{ item }}"
    dest: "{{ config_dir }}/{{ item }}"
    mode: '0644'
  loop:
    - fzf_config.zsh
    - history.zsh
    - starship.toml
    - vars.zsh

- name: "ZSH | Copy .zshrc"
  ansible.builtin.copy:
    src: "config/.zshrc"
    dest: "{{ config_file }}"
    mode: '0644'

- name: "ZSH | Install Oh My Zsh"
  ansible.builtin.include_tasks: "utils/ohmyzsh.yml"

- name: "ZSH | Install Starship prompt"
  ansible.builtin.include_tasks: "utils/starship.yml"
